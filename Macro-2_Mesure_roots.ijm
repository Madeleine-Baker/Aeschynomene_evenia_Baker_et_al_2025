//After defining roots with "Macro-1_ROI_Roots" on image with oldest plants, use and readjust mask on same plants but younger
run("ROI Manager...");
run("Clear Results");
roiManager("reset");

run("Set Measurements...", "area display redirect=None decimal=3");

//open one of the image, make copy and calibrate

path=File.openDialog("Select a File");
dir=File.getParent(path);
list = getFileList(dir);

open(path);
name=File.getName(path);
nom=File.nameWithoutExtension;
roiManager("reset");
//calibration
Stack.setXUnit("cm");
run("Properties...", "channels=1 slices=1 frames=1 pixel_width=0.0042167 pixel_height=0.0042167 voxel_depth=0.0042167");
run("Duplicate...","title=copyracine");	
run("Duplicate...","title=copybrun");	

//________perform identification of root, from the root mask previously draw on the older dpi root
	selectWindow("copyracine");
//ouvrir les regions racines
	waitForUser("ouvre le masque", "open old mask and adjust ROI for each root");
	nbroi=roiManager("count");      //number of selected root in roi manager
	
	// Color Thresholder 2.3.0/1.53j  TO BE REDEFINED FOR EACH EXPERIMENTAL SETUP
	// Autogenerated macro, single images only!
	min=newArray(3);
	max=newArray(3);
	filter=newArray(3);
	a=getTitle();
	run("HSB Stack");
	run("Convert Stack to Images");
	selectWindow("Hue");
	rename("0");
	selectWindow("Saturation");
	rename("1");
	selectWindow("Brightness");
	rename("2");
	min[0]=0;
	max[0]=255;
	filter[0]="pass";
	min[1]=40;
	max[1]=255;
	filter[1]="pass";
	min[2]=0;
	max[2]=255;
	filter[2]="pass";
	for (i=0;i<3;i++){
	  selectWindow(""+i);
	  setThreshold(min[i], max[i]);
	  run("Convert to Mask");
	  if (filter[i]=="stop")  run("Invert");
	}
	imageCalculator("AND create", "0","1");
	imageCalculator("AND create", "Result of 0","2");
	for (i=0;i<3;i++){
	  selectWindow(""+i);
	  close();
	}
	selectWindow("Result of 0");
	close();
	selectWindow("Result of Result of 0");
	rename(a);
	// Colour Thresholding-------------
	
	run("Create Selection");
	roiManager("Add");   //add the global root ROI
	
// identification of all individual root

	for(k=0;k<nbroi;k++)
		{
		roiManager("Select", newArray(k,nbroi));
		roiManager("and");
		roiManager("add");
		newroi=roiManager("count");
		roiManager("select", newroi-1);
		roiManager("Rename", nom+"_root_"+k+1);   //rename ROI xxx+brun
		}

//get number of ROI nnbrun: root drawing + global root ROI + individual root ROI. nnbrun = ref ROI brun
	nbbrun=roiManager("count");
//________work on brun area

	selectWindow("copybrun");

// Color Thresholder 2.3.0/1.53j
// Autogenerated macro, single images only!
		min=newArray(3);
		max=newArray(3);
		filter=newArray(3);
		a=getTitle();
		run("HSB Stack");
		run("Convert Stack to Images");
		selectWindow("Hue");
		rename("0");
		selectWindow("Saturation");
		rename("1");
		selectWindow("Brightness");
		rename("2");
		min[0]=199;
		max[0]=220;
		filter[0]="stop";
		min[1]=0;
		max[1]=255;
		filter[1]="pass";
		min[2]=0;
		max[2]=100;
		filter[2]="pass";
		for (i=0;i<3;i++){
		  selectWindow(""+i);
		  setThreshold(min[i], max[i]);
		  run("Convert to Mask");
		  if (filter[i]=="stop")  run("Invert");
		}
		imageCalculator("AND create", "0","1");
		imageCalculator("AND create", "Result of 0","2");
		for (i=0;i<3;i++){
		  selectWindow(""+i);
		  close();
		}
		selectWindow("Result of 0");
		close();
		selectWindow("Result of Result of 0");
		rename(a);
		// Colour Thresholding-------------
	
		run("Create Selection");
		roiManager("Add");   //brown mask with ref nbbrun


//_______brun area identification from individual root's ROI previously identified and global brun ROI		
	for(n=nbroi+1;n<nbbrun;n++)
		{
		roiManager("Select", newArray(n,nbbrun));
		roiManager("and");
		if(selectionType()!=-1)
			{
			roiManager("add");
			newbrun=roiManager("count");
			roiManager("select", newbrun-1);
			roiManager("Rename", nom+"_brun_"+newbrun-nbbrun-1);   //rename the roi xxx+brun
			}
		}
		
//roi manager cleaning : suppress global brun ROI, global root ROI and all draw root ROI	
roiManager("select", nbbrun);
roiManager("delete");
roiManager("select", Array.getSequence(nbroi+1));
roiManager("delete");

//save ROI and Results	
selectWindow(name);		
roiManager("Show None");
roiManager("Show All");
roiManager("save", dir+"//"+nom+".zip");
roiManager("measure");
saveAs("Results", dir+"//"+nom+".csv");
